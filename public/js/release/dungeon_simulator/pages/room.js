// Compiled by ClojureScript 1.9.229 {:static-fns true, :optimize-constants true}
goog.provide('dungeon_simulator.pages.room');
goog.require('cljs.core');
goog.require('dungeon_simulator.components.monster_description');
goog.require('dungeon_simulator.components.progress');
goog.require('dungeon_simulator.state');
goog.require('dungeon_simulator.components.legend');
goog.require('dungeon_simulator.components.trap_description');
dungeon_simulator.pages.room.room = (function dungeon_simulator$pages$room$room(){
return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dungeon_simulator.components.progress.render,[cljs.core.str("Room #"),cljs.core.str((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.progress) : cljs.core.deref.call(null,dungeon_simulator.state.progress)))].join('')], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [dungeon_simulator.components.legend.render,cljs.core.cst$kw$description.cljs$core$IFn$_invoke$arity$1((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.tile) : cljs.core.deref.call(null,dungeon_simulator.state.tile))),(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.monster) : cljs.core.deref.call(null,dungeon_simulator.state.monster))], null),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.monster) : cljs.core.deref.call(null,dungeon_simulator.state.monster))),"None"))?null:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dungeon_simulator.components.monster_description.render,(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.monster) : cljs.core.deref.call(null,dungeon_simulator.state.monster))], null)),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.monster) : cljs.core.deref.call(null,dungeon_simulator.state.monster))),"None"))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dungeon_simulator.components.trap_description.render,(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.trap) : cljs.core.deref.call(null,dungeon_simulator.state.trap))], null):null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$div,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(dungeon_simulator.state.monster) : cljs.core.deref.call(null,dungeon_simulator.state.monster))),"None"))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$a,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"continue-link",cljs.core.cst$kw$href,"/room"], null),"\u00BB I'm ready to continue!"], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$a,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"survive-link",cljs.core.cst$kw$href,"/room"], null),"\u00BB I survived and I am ready to continue!"], null))], null)], null);
});
